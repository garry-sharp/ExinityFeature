version: "3.7"

networks:
  kafka_network:
    driver: bridge

services:
  zookeeper:
    restart: always
    container_name: kafka-like-zookeeper
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka_network
    logging:
      driver: "none"

  kafka:
    restart: always
    container_name: kafka-like
    image: bitnami/kafka:3.3
    ports:
      - "9093:9093"
      - "9092:9092" 
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=kafka-like-zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-like:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    networks:
      - kafka_network
    logging:
      driver: "none"

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9020:8080
    environment:
      AUTH_TYPE: DISABLED
      KAFKA_CLUSTERS_0_NAME: CLIENT
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-like:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: kafka-like-zookeeper:2181
    depends_on:
      - kafka
    networks:
      - kafka_network
    logging:
      driver: "none"

  app:
    build: .
    container_name: payment_gateway_app
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - zookeeper
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/payments?sslmode=disable
      - KAFKA_BROKER_URL=kafka-like:9092
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=payments
      - DB_HOST=postgres
      - DB_PORT=5432
      - AES_ENCRYPTION_CIPHER=0e2a2eaee2c6135346e52c5836e78dc8a26ff5f03da3179c59bd4e5c118c6b23
    command: ["/app/main"]
    networks:
      - kafka_network

  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5433:5432"
    expose:
      - "5433"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=payments
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kafka_network
 

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=password 
    networks:
      - kafka_network 
    logging:
      driver: "none"


volumes:
  kafka-volume:
  zookeeper-volume: